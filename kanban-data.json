{
  "columns": [
    {
      "id": 1,
      "name": "To Do",
      "tasks": {
        "major": [
          {
            "id": 1,
            "text": "Ability to convert databases from one form to another easily, including from SQL to NoSQL but not from NoSQL to SQL. (Use conversion to json and dynamic figuring out of data types)"
          },
          {
            "id": 2,
            "text": "Add import and export tabs in home for importing and exporting in sql format (Check if the same can be done for NoSQL, will likely use json format there)"
          },
          {
            "id": 24,
            "text": "Add storage for query history, around 10 queries or so per database which can be accessed by using the up and down arrow keys on the query tab (The main Query tab can store queries separately, unless all query tab's functionality gets combined which might be for the better since that will make it consistent)"
          },
          {
            "id": 26,
            "text": "(Something to be done near the end of development to optimize) Ensure that the system will work on all or at least most platforms"
          },
          {
            "id": 3,
            "text": "(Something to be done near the end of development to optimize) Is the system lightweight? If not, see where corners can be cut, how to optimize, enhance speed and reduce size."
          }
        ],
        "minor": [
          {
            "id": 27,
            "text": "Add search bar to search db names and table names"
          },
          {
            "id": 4,
            "text": "Allow modification of database name, let them be in their actual capitalization instead of appearing as fully lowercase (Unless it has to be displayed that way)"
          },
          {
            "id": 25,
            "text": "Use pagination to limit the number of rows read in one go, otherwise gigantic databases can cause crashes"
          },
          {
            "id": 28,
            "text": "Add ability to search for specific information in records/documents"
          }
        ]
      }
    },
    {
      "id": 2,
      "name": "In Progress",
      "tasks": {
        "major": [
          {
            "id": 5,
            "text": "Ability to view or create and open a database in a specific database type with a command on the cmd."
          },
          {
            "id": 6,
            "text": "Check how to access the databases created in code. (Need connection link? Provide it)"
          }
        ],
        "minor": [
          {
            "id": 7,
            "text": "1.\tFix the issue of database getting deleted when it's created and user immediately goes back to list of databases without creating a collection in MongoDB."
          },
          {
            "id": 8,
            "text": "2.\tFix the handler name shown on the sidebar that shows no handler everywhere except on the home page."
          }
        ]
      }
    },
    {
      "id": 3,
      "name": "Done",
      "tasks": {
        "major": [
          {
            "id": 9,
            "text": "Created UI and styling similar to phpMyAdmin, the gui format inspiration for this project."
          },
          {
            "id": 10,
            "text": "Added SQL and NoSQL databases differentiation and context switching between them."
          },
          {
            "id": 11,
            "text": "Separated logic for SQL and NoSQL into sql_handler and nosql_handler, app.py for main work and differentiating to the two handlers."
          },
          {
            "id": 12,
            "text": "Added logic in both handlers to use db_handler and give work to the required handler to handle database-specific requests."
          },
          {
            "id": 13,
            "text": "Added logic to have the programmer use gui to perform CRUD operations on SQL and NoSQL databases and also run queries (Both within tables and outside tables, but not yet outside databases in the sense can't create new databases, can only work within a database i.e work only within SQLLite's database DB1 at a time)."
          },
          {
            "id": 14,
            "text": "Added logic to allow alteration of table structure, records and documents via GUI (Shows number of records, collections, tables and documents and they update whenever insertion/creation/deletion are performed)."
          },
          {
            "id": 15,
            "text": "Added db_registry for automatically detecting handlers for plug and play experience (Programmers just need to add a file with *_handler.py and it would automatically be detected and taken as new database type, is the programmer's responsibility to follow guidelines such as stating what type of database it is and it's name and add in all the abstract methods needed)"
          },
          {
            "id": 16,
            "text": "Added two SQL databases (SQLLite and DuckDB) and tested for clashes and context switched, fixed issues and clashes."
          },
          {
            "id": 17,
            "text": "Added two NoSQL databases (MongoDB andd TinyDB) and tested if context switching is correctly executed and there are no clashes."
          },
          {
            "id": 18,
            "text": "Fix Query tab on sidebar to work in individual databases and allow creation of databases as well."
          },
          {
            "id": 19,
            "text": "Performed rigorous regression testing at all steps, at the end of every requirement completion."
          }
        ],
        "minor": [
          {
            "id": 20,
            "text": "Fixed issue of sql databases creating databases in the same folder (Causing unrelated dbs to show up in SQLite list of dbs)"
          },
          {
            "id": 21,
            "text": "Fix the issue of 0 documents showing in collection_list"
          },
          {
            "id": 23,
            "text": "Check if NoSQL databases have issues of saving in the same folder like sql databases had issues with."
          },
          {
            "id": 22,
            "text": "Fix the issue of modify and delete button on documents not working in MongoDB."
          }
        ]
      }
    },
    {
      "id": 4,
      "name": "Testing",
      "tasks": {
        "major": [],
        "minor": []
      }
    }
  ],
  "nextColumnId": 5,
  "nextTaskId": 29,
  "dropdownStates": {
    "1-major": true,
    "1-minor": false,
    "2-major": false,
    "2-minor": false,
    "3-major": true,
    "3-minor": false
  }
}